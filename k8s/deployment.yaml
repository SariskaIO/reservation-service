apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: production
  name: reservation-service
  labels:
    app: reservation-service
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  selector:
    matchLabels:
      app: reservation-service
  template:
    metadata:
      labels:
        app: reservation-service
    spec:
      nodeSelector:
        alpha.eksctl.io/nodegroup-name: "managed-ng-private"
      containers:
        - name: reservation-service
          image: 718762496685.dkr.ecr.ap-south-1.amazonaws.com/sariska/reservation-service:latest
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
          resources:
            limits:
              memory: 100Mi
              cpu: 100m
            requests:
              memory: 100Mi
              cpu: 100m
          readinessProbe:
            httpGet:
              path: /
              port: 8080
            initialDelaySeconds: 10
          volumeMounts:
            - mountPath: /data
              name: reservation-service-pv
          env:
            - name: PUBLIC_URL
              value: "https://meet.sariska.io/"
            - name: PORT
              value: "8080"
            - name: NODE_ENV
              value: "production"
            - name: SECRET_MANAGEMENT_SERVICE_PRIVATE_KEY_URL
              value: "http://secret-management-service.production.svc.cluster.local/api/v1/secret/private/key"
            - name: SECRET_MANAGEMENT_SERVICE_PUBLIC_KEY_URL
              value: "http://secret-management-service.production.svc.cluster.local/api/v1/secret/public/key"
            - name: SERVICE_TOKEN_SECRET
              valueFrom:
                secretKeyRef:
                  name: reservation-service-secrets
                  key: SERVICE_TOKEN_SECRET
      volumes:
        - name: reservation-service-pv
          persistentVolumeClaim:
            claimName: reservation-service-pvc         